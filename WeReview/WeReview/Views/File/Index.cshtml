@model List<WeReview.Models.GitHubLine>

@{
    int fileId = Model[0].FileId;
}

@if (Model.Count == 0)
{
    <p>Not a supported file type.</p>
}
else
{
    <div id="floating-form">
        <p>Key:</p>
        <div>
            <code class="unchanged-line">Unchanged code</code>
        </div>
        <div>
            <code class="unapproved-line">Changed, unreviewed code</code>
        </div>
        <div>
            <code class="selected-line">Currently selected line(s)</code>
        </div>
        <div>
            <code class="approved-line">Approved code</code>
        </div>
        <div>
            <code class="rejected-line">Rejected code</code>
        </div>
        <br />
        <div>
            <textarea id="comment-text" rows="4" cols="50" required placeholder="Enter your comments"></textarea>
        </div>
        <div>
            <select id="reason">
                <option value="Approved">Approved</option>
                <option value="Conventions">Rejected - Does not meet Code Conventions</option>
                <option value="OOP">Rejected - Does not meet OOP Principles</option>
                <option value="Compile">Rejected - Does not Compile</option>
                <option value="Comment">Rejected - Other (Include reason in comment)</option>
            </select>
        </div>
        <br />
        <div>
            <button type="button" class="btn btn-primary" onclick="submitChanges()">Submit</button>
        </div>
        <br />
        <p id="error-message-form"></p>
    </div>

    @for (int i = 1; i <= Model.Count; i++)
    {
        if (Model[i - 1].IsChanged == false)
        {
            <code id="@("line" + i)" class="unchanged-line">@(Model[i - 1].Content)</code><br />
        }
        else
        {
            if (Model[i - 1].IsReviewed == false)
            {
                <code id="@("line" + i)" class="unapproved-line" onclick="selectLine(this)">@(Model[i - 1].Content)</code><br />
            }
            else
            {
                if (Model[i - 1].IsApproved == false)
                {
                    <code id="@("line" + i)" class="rejected-line">@(Model[i - 1].Content)</code><br />
                }
                else
                {
                    <code id="@("line" + i)" class="approved-line">@(Model[i - 1].Content)</code><br />
                }
            }
        }
    }
}



<script type="text/javascript">
    function selectLine(element) {
        element.className = "selected-line";
        element.setAttribute("onclick", "javascript:deselectLine(this)");
    }
    function deselectLine(element) {
        element.className = "unapproved-line";
        element.setAttribute("onclick", "javascript:selectLine(this)");
    }
    function submitChanges() {
        var ids = [];
        var selectedLines = document.getElementsByClassName("selected-line");
        for (i = 0; i < selectedLines.length; i++) {
            if (selectedLines[i].id.length > 3) {
                ids.push(selectedLines[i].id.substring(4));
            }
        }

        var reason = document.getElementById("reason").value;
        var comment = document.getElementById("comment-text").value;
        var lineApproval;
        if (reason == "Approved") {
            lineApproval = true;
        }
        else {
            lineApproval = false;
        }

        var dict = {
            FileId: @(fileId),
            LineIds: ids,
            IsApproved: lineApproval,
            Comment: comment,
            Reason: reason
        };

        if (ids.length > 0 && comment.length > 0) {
            $.ajax({
                type: "POST",
                url: "../File/Index",
                contentType: 'application/json',
                data: JSON.stringify(dict),
                success: function (data, textStatus, jQxhr) {
                    window.location.reload(true)
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log(errorThrown);
                }
            })
        }
        else {
            var errorMessage = "";
            if (ids.length < 1) {
                errorMessage += "Must select at least one line to review.";
            }
            if (comment.length < 1) {
                if (errorMessage.length > 0) {
                    errorMessage += "\n";
                }
                errorMessage += "Comment field must have data.";
            }
            var errortext = document.getElementById("error-message-form");
            errortext.innerHTML = errorMessage;
        }
    }

</script>

